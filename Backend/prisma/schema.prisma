// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

// Collection de Usuários
model User {
  id             String           @id @default(auto()) @map("_id") @db.ObjectId
  name           String
  email          String
  password       String
  likedBy        LikesPosts[]
  isAdmin        Boolean?
  createAt       DateTime         @default(now())
  updateAt       DateTime         @default(now())
  FavoritesBooks FavoritesBooks[]

  @@map("users") // Mapear para a coleção "users" no MongoDB
}

// ********************************************************************************* \\
// Postagens Diversas ('Aleatoridades')
model Post {
  id             String           @id @default(auto()) @map("_id") @db.ObjectId
  title          String
  description    String
  contentPost    Json
  typePost       String
  likedBy        LikesPosts[]
  createAt       DateTime         @default(now())
  updateAt       DateTime         @default(now())
  FavoritesBooks FavoritesBooks[]

  @@map("posts") // Mapear para a coleção "posts" no MongoDB
}

// Curtidas nas Postagens Diversas
model LikesPosts {
  id       String   @id @default(auto()) @map("_id") @db.ObjectId
  user     User     @relation(fields: [userId], references: [id])
  userId   String
  post     Post     @relation(fields: [postId], references: [id])
  postId   String
  createAt DateTime @default(now())
  updateAt DateTime @default(now())

  @@unique([userId, postId])
  @@map("LikesPosts") // Mapear para a coleção "likes" no MongoDB
}

// Lista de Livros Favoritos
model FavoritesBooks {
  id          String  @id @default(auto()) @map("_id") @db.ObjectId
  wantRead    Boolean @default(true)
  alreadyRead Boolean @default(false)
  user        User    @relation(fields: [userId], references: [id])
  userId      String
  post        Post    @relation(fields: [postId], references: [id])
  postId      String

  @@unique([userId, postId])
  @@map("FavoritesBooks") // Mapear para a coleção "likes" no MongoDB
}
